trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '8.x'
  displayName: 'Install Node.js'

- script: |
    npm install
  displayName: 'npm install'
- task: SonarQubePrepare@4
  inputs:
    SonarQube: 'sonarqubeconn'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: 'CICDDemoProject'
    cliProjectName: 'CICDDemoProject'
    cliSources: '.'
    extraProperties: |
      # Additional properties that will be passed to the scanner, 
      # Put one key=value per line, example:
      # sonar.exclusions=**/*.bin
      sonar.projectName=CICDDemoProject
      sonar.projectKey=CICDDemoProject
- task: SonarQubeAnalyze@4
- script: |
    npm test
  displayName: 'npm test'
- task: SonarQubePublish@4
  inputs:
    pollingTimeoutSec: '300'
- task: ArchiveFiles@2
  displayName: 'Archive files'
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
    includeRootFolder: false

- task: PublishBuildArtifacts@1
  displayName: 'Publish artifacts: drop'
  
- task: ArtifactoryGenericDownload@3
  inputs:
    connection: 'jFrogConn'
    specSource: 'taskConfiguration'
    fileSpec: |
      {
        "files": [
          {
            "pattern": "*.zip",
            "target": "drop/"
          }
        ]
      }
    collectBuildInfo: true
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)'
    failNoOp: true

- task: ArtifactoryGenericUpload@2
  inputs:
    artifactoryService: 'jFrogConn'
    specSource: 'taskConfiguration'
    fileSpec: |
      {
        "files": [
          {
            "pattern": "drop/",
            "target": "*.zip"
          }
        ]
      }
    collectBuildInfo: true
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)'
    failNoOp: true

- task: ArtifactoryPublishBuildInfo@1
  inputs:
    artifactoryService: 'jFrogConn'
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)'
- task: ArtifactoryBuildPromotion@1
  inputs:
    artifactoryService: 'jFrogConn'
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)'
    targetRepo: 'example-repo-local'
    status: 'Released'
    includeDependencies: true
    copy: false
    dryRun: false